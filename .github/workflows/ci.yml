name: CI
on:
  push:
jobs:
  # We already run the current golangci-lint in tests, but here we test
  # our GitHub action with the latest stable golangci-lint.
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v2
      -
        name: lint
        continue-on-error: false
        uses: golangci/golangci-lint-action@v2.5.2
        with:
          version: latest
          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

  vulns:
    name: Vulnerability scanner
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v2
      -
        uses: actions/setup-go@v2
      # We cannot use nancy-github-action because it is outdated, so it's better to use the latest
      # docker image for the validation
      -
        name: nancy
        run: go list -json -m all | docker run -i sonatypecommunity/nancy:latest

  test:
    strategy:
      matrix:
        go-version: [1.15.x, 1.16.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    services:
      postgres:
        image: postgres:11.9
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      -
        name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      -
        name: Checkout code
        uses: actions/checkout@v2
      -
        name: Test
        run: go test -coverprofile="coverage-${{ matrix.platform }}-${{ matrix.go-version }}.txt" -covermode=atomic ./...
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
      -
        name: Send coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: coverage-${{ matrix.platform }}-${{ matrix.go-version }}.txt
          flag-name: ${{ matrix.platform }}-${{ matrix.go-version }}
          parallel: true

  # notifies that all test jobs are finished.
  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      -
        uses: shogo82148/actions-goveralls@v1
        with:
          parallel-finished: true
